{"version":3,"sources":["components/dropdown/dropdown.js"],"names":["elements","document","querySelectorAll","forEach","element","elementInput","querySelector","dropdownList","dropdownArrow","buttonApply","buttonClear","addEventListener","classList","contains","add","remove","event","target","closest","rowsGroupParent","rowsGroup","numbers","countValues","result","values","declinations","value","newString","i","declination","String","includes","string","index","length","e","preventDefault","adults","babies","number","Number","innerHTML","countTheGuests","bedrooms","beds","bathrooms","countAmenities"],"mappings":";AAAA,IAAMA,EAAWC,SAASC,iBAAiB,aAE3CF,EAASG,QAAQ,SAAAC,GACTC,IAAAA,EAAeD,EAAQE,cAAc,mBACrCC,EAAeH,EAAQE,cAAc,sBACrCE,EAAgBJ,EAAQE,cAAc,2BACtCG,EAAcL,EAAQE,cAC1B,0CAEII,EAAcN,EAAQE,cAC1B,0CAGFE,EAAcG,iBAAiB,QAAS,YAE6B,IAAjEJ,EAAaK,UAAUC,SAAS,6BAEhCN,EAAaK,UAAUE,IAAI,6BAClBP,EAAaK,UAAUC,SAAS,8BACzCN,EAAaK,UAAUG,OAAO,+BAGlCV,EAAaM,iBAAiB,QAAS,WACrCJ,EAAaK,UAAUE,IAAI,+BAE7Bb,SAASU,iBAAiB,QAAS,SAAAK,GAC7BA,EAAMC,OAAOC,QAAQ,eAAiBd,GACxCG,EAAaK,UAAUG,OAAO,+BAG5BI,IAAAA,EAAkBf,EAAQE,cAAc,mBACxCc,EAAYhB,EAAQF,iBAAiB,iBACrCmB,EAAUjB,EAAQF,iBAAiB,oCAEnCoB,EAAc,SAACC,EAAQC,EAAQC,GAC/BF,GAAW,IAAXA,EACFlB,EAAaqB,MAAQ,OAChB,CACCC,IAAAA,EAAY,GAClBH,EAAOrB,QAAQ,SAACuB,EAAOE,GACfC,IAAAA,EAAcJ,EAAaG,GAC7BE,OAAOJ,GAAOK,SAAS,KACzBJ,EAAUC,GAAQE,GAAAA,OAAAA,OAAOJ,GAAUG,KAAAA,OAAAA,EAAY,IAE/CC,OAAOJ,GAAOK,SAAS,MACvBD,OAAOJ,GAAOK,SAAS,MACvBD,OAAOJ,GAAOK,SAAS,KAEvBJ,EAAUC,GAAQE,GAAAA,OAAAA,OAAOJ,GAAUG,KAAAA,OAAAA,EAAY,IAE/CF,EAAUC,GAAQE,GAAAA,OAAAA,OAAOJ,GAAUG,KAAAA,OAAAA,EAAY,MAGnDF,EAAUxB,QAAQ,SAAC6B,EAAQC,GACrBA,EAAQN,EAAUO,OAAS,EAC7B7B,EAAaqB,OAAYC,GAAAA,OAAAA,EAAUM,GAAnC,MACSA,IAAUN,EAAUO,OAAS,IACtC7B,EAAaqB,OAAYC,GAAAA,OAAAA,EAAUM,SAoD3Cb,EAAUjB,QAAQ,SAAAC,GAChBA,EAAQO,iBAAiB,QAAS,SAAAwB,GAChCA,EAAEC,iBAEF/B,EAAaqB,MAAQ,MAIb,IAFNP,EAAgBP,UAAUC,SACxB,uCAtDe,WACjBwB,IAAAA,EAAS,EACTC,EAAS,EACbjB,EAAQlB,QAAQ,SAACoC,EAAQN,GACnBA,GAAS,EACXI,GAAUG,OAAOD,EAAOE,WACL,IAAVR,IACTK,GAAUE,OAAOD,EAAOE,cAQ5BnB,EALqBe,EAASC,EACf,CAACD,EAAQC,GAGH,CAFK,CAAC,QAAS,QAAS,UACnB,CAAC,WAAY,WAAY,eA4C/CI,IAIM,IAFNvB,EAAgBP,UAAUC,SACxB,uCA3Ce,WACjB8B,IAAAA,EAAW,EACXC,EAAO,EACPC,EAAY,EAEhBxB,EAAQlB,QAAQ,SAACoC,EAAQN,GACT,IAAVA,EACFU,GAAYH,OAAOD,EAAOE,WACP,IAAVR,EACTW,GAAQJ,OAAOD,EAAOE,WACH,IAAVR,IACTY,GAAaL,OAAOD,EAAOE,cAiB/BnB,EAdwBqB,EAAWC,EAAOC,EACxB,CAACF,EAAUC,EAAMC,GAQd,CAPO,CAAC,UAAW,UAAW,UAC3B,CAAC,UAAW,UAAW,YAClB,CAC3B,iBACA,iBACA,mBAyBEC,OAINrC,EAAYE,iBAAiB,QAAS,WACpCJ,EAAaK,UAAUG,OAAO,+BAEhCL,EAAYC,iBAAiB,QAAS,WACpCN,EAAaqB,MAAQ,GACrBL,EAAQlB,QAAQ,SAAAoC,GACEA,EACRE,UAAY","file":"dropdown.0a96d694.js","sourceRoot":"../src","sourcesContent":["const elements = document.querySelectorAll('.dropdown');\n\nelements.forEach(element => {\n  const elementInput = element.querySelector('.input__content');\n  const dropdownList = element.querySelector('.dropdown__content');\n  const dropdownArrow = element.querySelector('.input__icon-arrow-down');\n  const buttonApply = element.querySelector(\n    '.dropdown__buttons-container_for-apply',\n  );\n  const buttonClear = element.querySelector(\n    '.dropdown__buttons-container_for-clear',\n  );\n\n  dropdownArrow.addEventListener('click', () => {\n    if (\n      dropdownList.classList.contains('dropdown__content_visible') === false\n    ) {\n      dropdownList.classList.add('dropdown__content_visible');\n    } else if (dropdownList.classList.contains('dropdown__content_visible')) {\n      dropdownList.classList.remove('dropdown__content_visible');\n    }\n  });\n  elementInput.addEventListener('focus', () => {\n    dropdownList.classList.add('dropdown__content_visible');\n  });\n  document.addEventListener('click', event => {\n    if (event.target.closest('.dropdown') !== element) {\n      dropdownList.classList.remove('dropdown__content_visible');\n    }\n  });\n  const rowsGroupParent = element.querySelector('.dropdown__rows');\n  const rowsGroup = element.querySelectorAll('.dropdown-row');\n  const numbers = element.querySelectorAll('.dropdown-row__amount_with-count');\n\n  const countValues = (result, values, declinations) => {\n    if (result === 0) {\n      elementInput.value = '';\n    } else {\n      const newString = [];\n      values.forEach((value, i) => {\n        const declination = declinations[i];\n        if (String(value).includes('1')) {\n          newString[i] = `${String(value)} ${declination[0]}`;\n        } else if (\n          String(value).includes('2') ||\n          String(value).includes('3') ||\n          String(value).includes('4')\n        ) {\n          newString[i] = `${String(value)} ${declination[1]}`;\n        } else {\n          newString[i] = `${String(value)} ${declination[2]}`;\n        }\n      });\n      newString.forEach((string, index) => {\n        if (index < newString.length - 1) {\n          elementInput.value += `${newString[index]}, `;\n        } else if (index === newString.length - 1) {\n          elementInput.value += `${newString[index]}`;\n        }\n      });\n    }\n  };\n  const countTheGuests = () => {\n    let adults = 0;\n    let babies = 0;\n    numbers.forEach((number, index) => {\n      if (index <= 1) {\n        adults += Number(number.innerHTML);\n      } else if (index === 2) {\n        babies += Number(number.innerHTML);\n      }\n    });\n    const amountGuests = adults + babies;\n    const guests = [adults, babies];\n    const declinationGuests = ['гость', 'гостя', 'гостей'];\n    const declinationBabies = ['младенец', 'младенца', 'младенцев'];\n    const declinations = [declinationGuests, declinationBabies];\n    countValues(amountGuests, guests, declinations);\n  };\n  const countAmenities = () => {\n    let bedrooms = 0;\n    let beds = 0;\n    let bathrooms = 0;\n\n    numbers.forEach((number, index) => {\n      if (index === 0) {\n        bedrooms += Number(number.innerHTML);\n      } else if (index === 1) {\n        beds += Number(number.innerHTML);\n      } else if (index === 2) {\n        bathrooms += Number(number.innerHTML);\n      }\n    });\n    const amountAmenities = bedrooms + beds + bathrooms;\n    const amenities = [bedrooms, beds, bathrooms];\n    const declinationBedrooms = ['спальня', 'спальни', 'спален'];\n    const declinationBeds = ['кровать', 'кровати', 'кроватей'];\n    const declinationBathrooms = [\n      'ванная комната',\n      'ванные комнаты',\n      'ванных комнат',\n    ];\n    const declinations = [\n      declinationBedrooms,\n      declinationBeds,\n      declinationBathrooms,\n    ];\n    countValues(amountAmenities, amenities, declinations);\n  };\n  rowsGroup.forEach(element => {\n    element.addEventListener('click', e => {\n      e.preventDefault();\n\n      elementInput.value = null;\n      if (\n        rowsGroupParent.classList.contains(\n          'dropdown__rows_for-count-the-guests',\n        ) === true\n      ) {\n        countTheGuests();\n      } else if (\n        rowsGroupParent.classList.contains(\n          'dropdown__rows_for-count-amenities',\n        ) === true\n      ) {\n        countAmenities();\n      }\n    });\n  });\n  buttonApply.addEventListener('click', () => {\n    dropdownList.classList.remove('dropdown__content_visible');\n  });\n  buttonClear.addEventListener('click', () => {\n    elementInput.value = '';\n    numbers.forEach(number => {\n      const element = number;\n      element.innerHTML = '0';\n    });\n  });\n});\n"]}