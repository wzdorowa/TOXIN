{"version":3,"sources":["components/date-dropdown/DateDropdown.js"],"names":["DateDropdown","element","datepickerGroup","datepicker","elementsInput","dropdownsArrow","buttonApply","buttonClear","calendar","dayFrom","dayTo","dates","_findElement","_setDefaultDate","_bindEventListeners","_setValueToInput","querySelector","querySelectorAll","inputs","today","Date","dayAfter","setDate","getDate","$","data","selectDate","length","todayShort","toISOString","replace","split","reverse","join","dayAfterShort","value","options","month","day","Array","from","toLocaleString","pop","formatTodayShort","formatDayAfterShort","_showButtonClear","moveToOtherMonthsOnSelect","classList","add","remove","toggle","$myCalendar","find","clear","forEach","contains","_toggleClass","_removeClass","_clearValues","_hideButtonClear","event","target","elementInput","addEventListener","_handleInputContentFocus","bind","dropdownArrow","_handleIconArrowDownClick","_handleButtonsContainerForApplyClick","_handleButtonsContainerForClearClick","document","_handleDocumentClick","parents","navTitles","days","multipleDatesSeparator","dateFormat","onSelect","fd","input","string","i","elements"],"mappings":";AA8OA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA9OMA,IAAAA,EAAAA,WACQC,SAAAA,EAAAA,GAAS,EAAA,KAAA,GACdC,KAAAA,gBAAkBD,EAClBE,KAAAA,WAAa,KACbC,KAAAA,cAAgB,KAChBC,KAAAA,eAAiB,KACjBC,KAAAA,YAAc,KACdC,KAAAA,YAAc,KACdC,KAAAA,SAAW,KACXC,KAAAA,QAAU,GACVC,KAAAA,MAAQ,GACRC,KAAAA,MAAQ,GAERC,KAAAA,eACAC,KAAAA,kBACAC,KAAAA,sBACAC,KAAAA,mBA8NT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,eA3NE,MAAA,WACOZ,KAAAA,WAAa,KAAKD,gBAAgBc,cACrC,iCAEGZ,KAAAA,cAAgB,KAAKF,gBAAgBe,iBACxC,oCAEGZ,KAAAA,eAAiB,KAAKH,gBAAgBe,iBACzC,uCAEGX,KAAAA,YAAc,KAAKJ,gBAAgBc,cACtC,8BAEGT,KAAAA,YAAc,KAAKL,gBAAgBc,cACtC,8BAEGR,KAAAA,SAAW,KAAKN,gBAAgBc,cAAc,uBAC9CE,KAAAA,OAAS,KAAKhB,gBAAgBe,iBACjC,sCAyMN,CAAA,IAAA,kBArME,MAAA,WACQE,IAAAA,EAAQ,IAAIC,KACZC,EAAW,IAAID,KAMjB,GALJC,EAASC,QAAQD,EAASE,UAAY,GAEnBC,EAAE,KAAKhB,UAAUL,aAAasB,KAAK,cAE3CC,WAAW,CAACP,EAAOE,IAC1B,KAAKH,OAAOS,OAAS,EAAG,CACpBC,IAAAA,EAAaT,EAChBU,cACAC,QAAQ,MAAO,IACfC,MAAM,KACNC,UACAC,KAAK,KACFC,EAAgBb,EACnBQ,cACAC,QAAQ,MAAO,IACfC,MAAM,KACNC,UACAC,KAAK,KAEHf,KAAAA,OAAO,GAAGiB,MAAQP,EAClBV,KAAAA,OAAO,GAAGiB,MAAQD,MAClB,CACCE,IAAAA,EAAU,CAAEC,MAAO,QAASC,IAAK,WACjCV,EAAaW,MAAMC,KAAKrB,EAAMsB,eAAe,QAASL,IAC5DR,EAAWc,MACLC,IAAAA,EAAmBf,EAAWK,KAAK,IACnCC,EAAgBK,MAAMC,KAC1BnB,EAASoB,eAAe,QAASL,IAEnCF,EAAcQ,MACRE,IAAAA,EAAsBV,EAAcD,KAAK,IAE1Cf,KAAAA,OAAO,GAAGiB,MAAWQ,GAAAA,OAAAA,EAAsBC,OAAAA,OAAAA,GAG7CC,KAAAA,mBAELrB,EAAE,KAAKhB,UAAUL,WAAW,CAC1B2C,2BAA2B,MA4JjC,CAAA,IAAA,YAxJE,MAAA,WACO3C,KAAAA,WAAW4C,UAAUC,IAAI,uCAuJlC,CAAA,IAAA,eApJE,MAAA,WACO7C,KAAAA,WAAW4C,UAAUE,OAAO,uCAmJrC,CAAA,IAAA,eAhJE,MAAA,WACO9C,KAAAA,WAAW4C,UAAUG,OAAO,uCA+IrC,CAAA,IAAA,eA5IE,MAAA,WACQC,IAAAA,EAAc3B,EAAE,KAAKtB,iBAAiBkD,KAAK,uBAC/B5B,EAAE2B,GAAahD,aAAasB,KAAK,cACzC4B,QACLnC,KAAAA,OAAOoC,QAAQ,SAAArD,GACJA,EACRkC,MAAQ,OAsIpB,CAAA,IAAA,mBAlIE,MAAA,WACO,KAAK5B,YAAYwC,UAAUQ,SAAS,kCAClChD,KAAAA,YAAYwC,UAAUC,IAAI,mCAgIrC,CAAA,IAAA,mBA5HE,MAAA,WACM,KAAKzC,YAAYwC,UAAUQ,SAAS,kCACjChD,KAAAA,YAAYwC,UAAUE,OAAO,mCA0HxC,CAAA,IAAA,2BAtHE,MAAA,WACOO,KAAAA,iBAqHT,CAAA,IAAA,4BAlHE,MAAA,WACOA,KAAAA,iBAiHT,CAAA,IAAA,uCA9GE,MAAA,WACOC,KAAAA,iBA6GT,CAAA,IAAA,uCA1GE,MAAA,WACOC,KAAAA,eACAC,KAAAA,qBAwGT,CAAA,IAAA,uBArGE,MAAA,SAAqBC,GACd,KAAK1D,gBAAgBqD,SAASK,EAAMC,UAClCJ,KAAAA,eACqB,IAAtB,KAAK9C,MAAMgB,SACR+B,KAAAA,eACAC,KAAAA,uBAgGb,CAAA,IAAA,sBA3FE,MAAA,WAAsB,IAAA,EAAA,KACfvD,KAAAA,cAAckD,QAAQ,SAAAQ,GACzBA,EAAaC,iBACX,QACA,EAAKC,yBAAyBC,KAAK,MAGlC5D,KAAAA,eAAeiD,QAAQ,SAAAY,GAC1BA,EAAcH,iBACZ,QACA,EAAKI,0BAA0BF,KAAK,MAGnC3D,KAAAA,YAAYyD,iBACf,QACA,KAAKK,qCAAqCH,KAAK,OAE5C1D,KAAAA,YAAYwD,iBACf,QACA,KAAKM,qCAAqCJ,KAAK,OAEjDK,SAASP,iBACP,QACA,KAAKQ,qBAAqBN,KAAK,OAC/B,KAmEN,CAAA,IAAA,mBA/DE,MAAA,WAAmB,IAAA,EAAA,KAGD,IADdzC,EAAE,KAAKhB,UAAUgE,QAAQ,6CACtB7C,OAEHH,EAAE,KAAKhB,UAAUL,WAAW,CAC1BsE,UAAW,CACTC,KAAM,kBAERC,uBAAwB,MACxBC,WAAY,OACZ9B,2BAA2B,EAC3B+B,SAAU,SAACC,EAAInE,GACb,EAAKA,MAAQA,EACPoE,IAAAA,EAAQ,EAAK7E,gBAAgBc,cACjC,oCAEEgE,EAAS,GAETrE,IACFA,EAAM2C,QAAQ,WACZ0B,EAASF,IAEXC,EAAM5C,MAAQ6C,EAEd,EAAKnC,uBAKXrB,EAAE,KAAKhB,UAAUL,WAAW,CAC1BsE,UAAW,CACTC,KAAM,kBAERE,WAAY,aACZ9B,2BAA2B,EAC3B+B,SAAU,SAACC,EAAInE,GACb,EAAKA,MAAQA,EACPO,IAAAA,EAAS,EAAKhB,gBAAgBe,iBAClC,oCAEER,EAAU,GACVC,EAAQ,GAEEoE,EAAG/C,MAAM,IACjBuB,QAAQ,SAACrD,EAASgF,GAClBA,EAAI,GACNxE,GAAWR,EACFgF,EAAI,KACbvE,GAAST,KAGbiB,EAAO,GAAGiB,MAAQ1B,EAClBS,EAAO,GAAGiB,MAAQzB,EAElB,EAAKmC,0BAQf,EA9OM7C,GA6OAkF,EAAWZ,SAASrD,iBAAiB,qBAC3CiE,EAAS5B,QAAQ,SAAArD,GACXD,IAAAA,EAAaC","file":"DateDropdown.12d461ff.js","sourceRoot":"../src","sourcesContent":["class DateDropdown {\n  constructor(element) {\n    this.datepickerGroup = element;\n    this.datepicker = null;\n    this.elementsInput = null;\n    this.dropdownsArrow = null;\n    this.buttonApply = null;\n    this.buttonClear = null;\n    this.calendar = null;\n    this.dayFrom = '';\n    this.dayTo = '';\n    this.dates = [];\n\n    this._findElement();\n    this._setDefaultDate();\n    this._bindEventListeners();\n    this._setValueToInput();\n  }\n\n  _findElement() {\n    this.datepicker = this.datepickerGroup.querySelector(\n      '.js-date-dropdown__datepicker',\n    );\n    this.elementsInput = this.datepickerGroup.querySelectorAll(\n      '.js-date-dropdown__input-content',\n    );\n    this.dropdownsArrow = this.datepickerGroup.querySelectorAll(\n      '.js-date-dropdown__input-arrow-down',\n    );\n    this.buttonApply = this.datepickerGroup.querySelector(\n      '.js-calendar__button-apply',\n    );\n    this.buttonClear = this.datepickerGroup.querySelector(\n      '.js-calendar__button-clear',\n    );\n    this.calendar = this.datepickerGroup.querySelector('.js-datepicker-here');\n    this.inputs = this.datepickerGroup.querySelectorAll(\n      '.js-date-dropdown__input-content',\n    );\n  }\n\n  _setDefaultDate() {\n    const today = new Date();\n    const dayAfter = new Date();\n    dayAfter.setDate(dayAfter.getDate() + 4);\n\n    const datepicker = $(this.calendar).datepicker().data('datepicker');\n\n    datepicker.selectDate([today, dayAfter]);\n    if (this.inputs.length > 1) {\n      const todayShort = today\n        .toISOString()\n        .replace(/T.*/, '')\n        .split('-')\n        .reverse()\n        .join('.');\n      const dayAfterShort = dayAfter\n        .toISOString()\n        .replace(/T.*/, '')\n        .split('-')\n        .reverse()\n        .join('.');\n\n      this.inputs[0].value = todayShort;\n      this.inputs[1].value = dayAfterShort;\n    } else {\n      const options = { month: 'short', day: 'numeric' };\n      const todayShort = Array.from(today.toLocaleString('ru-RU', options));\n      todayShort.pop();\n      const formatTodayShort = todayShort.join('');\n      const dayAfterShort = Array.from(\n        dayAfter.toLocaleString('ru-RU', options),\n      );\n      dayAfterShort.pop();\n      const formatDayAfterShort = dayAfterShort.join('');\n\n      this.inputs[0].value = `${formatTodayShort} - ${formatDayAfterShort}`;\n    }\n\n    this._showButtonClear();\n\n    $(this.calendar).datepicker({\n      moveToOtherMonthsOnSelect: false,\n    });\n  }\n\n  _addClass() {\n    this.datepicker.classList.add('date-dropdown__datepicker_visible');\n  }\n\n  _removeClass() {\n    this.datepicker.classList.remove('date-dropdown__datepicker_visible');\n  }\n\n  _toggleClass() {\n    this.datepicker.classList.toggle('date-dropdown__datepicker_visible');\n  }\n\n  _clearValues() {\n    const $myCalendar = $(this.datepickerGroup).find('.js-datepicker-here');\n    const $calendar = $($myCalendar).datepicker().data('datepicker');\n    $calendar.clear();\n    this.inputs.forEach(element => {\n      const input = element;\n      input.value = '';\n    });\n  }\n\n  _hideButtonClear() {\n    if (!this.buttonClear.classList.contains('calendar__button-clear_hidden')) {\n      this.buttonClear.classList.add('calendar__button-clear_hidden');\n    }\n  }\n\n  _showButtonClear() {\n    if (this.buttonClear.classList.contains('calendar__button-clear_hidden')) {\n      this.buttonClear.classList.remove('calendar__button-clear_hidden');\n    }\n  }\n\n  _handleInputContentFocus() {\n    this._toggleClass();\n  }\n\n  _handleIconArrowDownClick() {\n    this._toggleClass();\n  }\n\n  _handleButtonsContainerForApplyClick() {\n    this._removeClass();\n  }\n\n  _handleButtonsContainerForClearClick() {\n    this._clearValues();\n    this._hideButtonClear();\n  }\n\n  _handleDocumentClick(event) {\n    if (!this.datepickerGroup.contains(event.target)) {\n      this._removeClass();\n      if (this.dates.length === 1) {\n        this._clearValues();\n        this._hideButtonClear();\n      }\n    }\n  }\n\n  _bindEventListeners() {\n    this.elementsInput.forEach(elementInput => {\n      elementInput.addEventListener(\n        'click',\n        this._handleInputContentFocus.bind(this),\n      );\n    });\n    this.dropdownsArrow.forEach(dropdownArrow => {\n      dropdownArrow.addEventListener(\n        'click',\n        this._handleIconArrowDownClick.bind(this),\n      );\n    });\n    this.buttonApply.addEventListener(\n      'click',\n      this._handleButtonsContainerForApplyClick.bind(this),\n    );\n    this.buttonClear.addEventListener(\n      'click',\n      this._handleButtonsContainerForClearClick.bind(this),\n    );\n    document.addEventListener(\n      'click',\n      this._handleDocumentClick.bind(this),\n      true,\n    );\n  }\n\n  _setValueToInput() {\n    if (\n      $(this.calendar).parents('.date-dropdown__datepicker_with-one-input')\n        .length === 1\n    ) {\n      $(this.calendar).datepicker({\n        navTitles: {\n          days: 'MM <i>yyyy</i>',\n        },\n        multipleDatesSeparator: ' - ',\n        dateFormat: 'dd M',\n        moveToOtherMonthsOnSelect: false,\n        onSelect: (fd, dates) => {\n          this.dates = dates;\n          const input = this.datepickerGroup.querySelector(\n            '.js-date-dropdown__input-content',\n          );\n          let string = '';\n\n          if (dates) {\n            dates.forEach(() => {\n              string = fd;\n            });\n            input.value = string;\n\n            this._showButtonClear();\n          }\n        },\n      });\n    } else {\n      $(this.calendar).datepicker({\n        navTitles: {\n          days: 'MM <i>yyyy</i>',\n        },\n        dateFormat: 'dd.mm.yyyy',\n        moveToOtherMonthsOnSelect: false,\n        onSelect: (fd, dates) => {\n          this.dates = dates;\n          const inputs = this.datepickerGroup.querySelectorAll(\n            '.js-date-dropdown__input-content',\n          );\n          let dayFrom = '';\n          let dayTo = '';\n\n          const signs = fd.split('');\n          signs.forEach((element, i) => {\n            if (i < 10) {\n              dayFrom += element;\n            } else if (i > 10) {\n              dayTo += element;\n            }\n          });\n          inputs[0].value = dayFrom;\n          inputs[1].value = dayTo;\n\n          this._showButtonClear();\n        },\n      });\n    }\n  }\n}\n\nconst elements = document.querySelectorAll('.js-date-dropdown');\nelements.forEach(element => {\n  new DateDropdown(element);\n});\n"]}