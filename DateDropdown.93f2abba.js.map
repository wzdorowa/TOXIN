{"version":3,"sources":["components/date-dropdown/DateDropdown.js"],"names":["DateDropdown","element","_toggleVisibilityClass","_removeVisibilityClass","_clearValues","_hideButtonClear","event","datepickerGroup","contains","target","dates","length","datepicker","elementsInput","dropdownsArrow","buttonApply","buttonClear","calendar","_findElement","_setDefaultDate","_bindEventListeners","_setValueToInput","querySelector","querySelectorAll","inputs","numberOfDays","today","Date","dayAfter","now","$","data","minDate","selectDate","todayShort","toISOString","replace","split","reverse","join","dayAfterShort","value","options","month","day","Array","from","toLocaleString","pop","formatTodayShort","formatDayAfterShort","_showButtonClear","moveToOtherMonthsOnSelect","classList","add","remove","toggle","$myCalendar","find","clear","forEach","elementInput","addEventListener","_handleInputContentFocus","dropdownArrow","_handleIconArrowDownClick","_handleButtonsContainerForApplyClick","_handleButtonsContainerForClearClick","document","_handleDocumentClick","parents","navTitles","days","multipleDatesSeparator","dateFormat","onSelect","selectedDay","input","dayFrom","dayTo","i","elements"],"mappings":"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","file":"DateDropdown.93f2abba.js","sourceRoot":"../src","sourcesContent":["class DateDropdown {\n  constructor(element) {\n    this.datepickerGroup = element;\n    this.datepicker = null;\n    this.elementsInput = null;\n    this.dropdownsArrow = null;\n    this.buttonApply = null;\n    this.buttonClear = null;\n    this.calendar = null;\n    this.dates = [];\n\n    this._findElement();\n    this._setDefaultDate();\n    this._bindEventListeners();\n    this._setValueToInput();\n  }\n\n  _findElement() {\n    this.datepicker = this.datepickerGroup.querySelector(\n      '.js-date-dropdown__datepicker',\n    );\n    this.elementsInput = this.datepickerGroup.querySelectorAll(\n      '.js-date-dropdown__input-content',\n    );\n    this.dropdownsArrow = this.datepickerGroup.querySelectorAll(\n      '.js-date-dropdown__input-arrow-down',\n    );\n    this.buttonApply = this.datepickerGroup.querySelector(\n      '.js-calendar__button-apply',\n    );\n    this.buttonClear = this.datepickerGroup.querySelector(\n      '.js-calendar__button-clear',\n    );\n    this.calendar = this.datepickerGroup.querySelector('.js-datepicker-here');\n    this.inputs = this.datepickerGroup.querySelectorAll(\n      '.js-date-dropdown__input-content',\n    );\n  }\n\n  _setDefaultDate() {\n    const numberOfDays = 4 * 24 * 3600 * 1000;\n    const today = new Date();\n    const dayAfter = new Date(Date.now() + numberOfDays);\n\n    const datepicker = $(this.calendar).datepicker().data('datepicker');\n\n    $(this.calendar).datepicker({\n      minDate: today,\n    });\n\n    datepicker.selectDate([today, dayAfter]);\n    if (this.inputs.length > 1) {\n      const todayShort = today\n        .toISOString()\n        .replace(/T.*/, '')\n        .split('-')\n        .reverse()\n        .join('.');\n      const dayAfterShort = dayAfter\n        .toISOString()\n        .replace(/T.*/, '')\n        .split('-')\n        .reverse()\n        .join('.');\n\n      this.inputs[0].value = todayShort;\n      this.inputs[1].value = dayAfterShort;\n    } else {\n      const options = { month: 'short', day: 'numeric' };\n      const todayShort = Array.from(today.toLocaleString('ru-RU', options));\n      todayShort.pop();\n      const formatTodayShort = todayShort.join('');\n      const dayAfterShort = Array.from(\n        dayAfter.toLocaleString('ru-RU', options),\n      );\n      dayAfterShort.pop();\n      const formatDayAfterShort = dayAfterShort.join('');\n\n      this.inputs[0].value = `${formatTodayShort} - ${formatDayAfterShort}`;\n    }\n\n    this._showButtonClear();\n\n    $(this.calendar).datepicker({\n      moveToOtherMonthsOnSelect: false,\n    });\n  }\n\n  _addVisibilityClass() {\n    this.datepicker.classList.add('date-dropdown__datepicker_visible');\n  }\n\n  _removeVisibilityClass() {\n    this.datepicker.classList.remove('date-dropdown__datepicker_visible');\n  }\n\n  _toggleVisibilityClass() {\n    this.datepicker.classList.toggle('date-dropdown__datepicker_visible');\n  }\n\n  _clearValues() {\n    const $myCalendar = $(this.datepickerGroup).find('.js-datepicker-here');\n    const $calendar = $($myCalendar).datepicker().data('datepicker');\n    $calendar.clear();\n    this.inputs.forEach(element => {\n      const input = element;\n      input.value = '';\n    });\n  }\n\n  _hideButtonClear() {\n    if (!this.buttonClear.classList.contains('calendar__button-clear_hidden')) {\n      this.buttonClear.classList.add('calendar__button-clear_hidden');\n    }\n  }\n\n  _showButtonClear() {\n    if (this.buttonClear.classList.contains('calendar__button-clear_hidden')) {\n      this.buttonClear.classList.remove('calendar__button-clear_hidden');\n    }\n  }\n\n  _handleInputContentFocus = () => {\n    this._toggleVisibilityClass();\n  }\n\n  _handleIconArrowDownClick = () => {\n    this._toggleVisibilityClass();\n  }\n\n  _handleButtonsContainerForApplyClick = () => {\n    this._removeVisibilityClass();\n  }\n\n  _handleButtonsContainerForClearClick = () => {\n    this._clearValues();\n    this._hideButtonClear();\n  }\n\n  _handleDocumentClick = (event) => {\n    if (!this.datepickerGroup.contains(event.target)) {\n      this._removeVisibilityClass();\n      if (this.dates.length === 1) {\n        this._clearValues();\n        this._hideButtonClear();\n      }\n    }\n  }\n\n  _bindEventListeners() {\n    this.elementsInput.forEach(elementInput => {\n      elementInput.addEventListener('click', this._handleInputContentFocus);\n    });\n    this.dropdownsArrow.forEach(dropdownArrow => {\n      dropdownArrow.addEventListener('click', this._handleIconArrowDownClick);\n    });\n    this.buttonApply.addEventListener('click', this._handleButtonsContainerForApplyClick);\n    this.buttonClear.addEventListener('click', this._handleButtonsContainerForClearClick);\n    document.addEventListener('click', this._handleDocumentClick, true);\n  }\n\n  _setValueToInput() {\n    if (\n      $(this.calendar).parents('.date-dropdown__datepicker_with-one-input')\n        .length === 1\n    ) {\n      $(this.calendar).datepicker({\n        navTitles: {\n          days: 'MM <i>yyyy</i>',\n        },\n        multipleDatesSeparator: ' - ',\n        dateFormat: 'dd M',\n        moveToOtherMonthsOnSelect: false,\n        onSelect: (selectedDay, dates) => {\n          this.dates = dates;\n          const input = this.datepickerGroup.querySelector(\n            '.js-date-dropdown__input-content',\n          );\n\n          if (dates) {\n            input.value = selectedDay;\n\n            this._showButtonClear();\n          } else {\n            this._hideButtonClear();\n          }\n        },\n      });\n    } else {\n      $(this.calendar).datepicker({\n        navTitles: {\n          days: 'MM <i>yyyy</i>',\n        },\n        dateFormat: 'dd.mm.yyyy',\n        moveToOtherMonthsOnSelect: false,\n        onSelect: (selectedDay, dates) => {\n          this.dates = dates;\n          const inputs = this.datepickerGroup.querySelectorAll(\n            '.js-date-dropdown__input-content',\n          );\n          let dayFrom = '';\n          let dayTo = '';\n\n          const signs = selectedDay.split('');\n          signs.forEach((element, i) => {\n            if (i < 10) {\n              dayFrom += element;\n            } else if (i > 10) {\n              dayTo += element;\n            }\n          });\n          inputs[0].value = dayFrom;\n          inputs[1].value = dayTo;\n\n          this._showButtonClear();\n        },\n      });\n    }\n  }\n}\n\nconst elements = document.querySelectorAll('.js-date-dropdown');\nelements.forEach(element => {\n  new DateDropdown(element);\n});\n"]}